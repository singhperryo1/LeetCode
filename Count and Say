Problem #38 

Description: 
The count-and-say sequence is the sequence of integers with the first five terms as following:

1.     1
2.     11
3.     21
4.     1211
5.     111221
1 is read off as "one 1" or 11.
11 is read off as "two 1s" or 21.
21 is read off as "one 2, then one 1" or 1211.

Given an integer n where 1 ≤ n ≤ 30, generate the nth term of the count-and-say sequence.

Note: Each term of the sequence of integers will be represented as a string.

Example 1:

Input: 1
Output: "1"
Example 2:

Input: 4
Output: "1211"

Solution: 
Programming Language: java 

class Solution {
    public String countAndSay(int n) {
        if(n==1) return "1" ;   //when n = 1  
        String ans = "1";      //when n>1, so to begin with we set answer string to 1 
        for( int i=1 ; i<n; i++)
        {
         ans = helper(ans); //recursively using helper func defined below    
        }
        return ans ; 
    }
    //now defining helper func 
    public String helper (String ans)
    {
        StringBuilder sb = new StringBuilder();   //to append the final String ans 
        int counter = 1 ; //to count the number of integers 
        char toCount = ans.charAt(0);  // the integer char to count 
        for(int i=1; i<ans.length(); i++)   
        {
    if(ans.charAt(i)==toCount)
        counter++ ;           
        else 
        {
            sb.append(counter); 
            sb.append(toCount); 
            toCount = ans.charAt(i);  //setting the next char integer to count  
            counter = 1 ;   //resetting the counter to 1 
        }
        }
        sb.append(counter); 
        sb.append(toCount);
        return sb.toString(); 
    }
}
